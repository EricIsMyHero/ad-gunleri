const express = require('express');
const bodyParser = require('body-parser');
const webpush = require('web-push');
const cron = require('node-cron');
const path = require('path');

const app = express();
app.use(bodyParser.json());
// index.html v…ô dig…ôr statik fayllarƒ± t…ôqdim etm…ôk √º√ß√ºn
app.use(express.static(path.join(__dirname)));


// VAPID a√ßarlarƒ±nƒ± d…ôyi≈üm…ôyi unutmayƒ±n!
const publicVapidKey = 'SENIN_PUBLIC_VAPID_KEY';
const privateVapidKey = 'SENIN_PRIVATE_VAPID_KEY';

webpush.setVapidDetails('mailto:you@example.com', publicVapidKey, privateVapidKey);

// Test √º√ß√ºn ad g√ºnl…ôri. Real proyektl…ôrd…ô bu m…ôlumatlar veril…ônl…ôr bazasƒ±nda saxlanƒ±lmalƒ±dƒ±r.
let birthdays = [
  { name: "∆èli V…ôliyev", day: 13, month: 8 },
  { name: "Leyla Quliyeva", day: 14, month: 8 },
  { name: "Nigar M…ômm…ôdova", day: 15, month: 8 }
];

// Abun…ôlikl…ôr burada saxlanƒ±lƒ±r. Bu da veril…ônl…ôr bazasƒ±nda olmalƒ±dƒ±r.
let subscriptions = [];

// Route: ∆èsas s…ôhif…ô
app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, 'index.html'));
});

// Route: Abun…ôlikl…ôri q…ôbul et
app.post('/subscribe', (req, res) => {
  const subscription = req.body;
  subscriptions.push(subscription);
  console.log('Yeni abun…ôlik:', subscription);
  res.status(201).json({ message: 'Abun…ôlik q…ôbul edildi' });
});

// Route: Yeni ad g√ºn√º …ôlav…ô et
app.post('/add-birthday', (req, res) => {
  const { name, day, month } = req.body;
  if(name && day && month) {
    birthdays.push({ name, day, month });
    console.log('Yeni ad g√ºn√º …ôlav…ô edildi:', { name, day, month });
    res.status(201).json({ message: `${name} adlƒ± ≈ü…ôxsin ad g√ºn√º uƒüurla …ôlav…ô edildi!` });
  } else {
    res.status(400).json({ message: 'B√ºt√ºn sah…ôl…ôr doldurulmalƒ±dƒ±r!' });
  }
});

// YENƒ∞ Route: B√ºt√ºn ad g√ºnl…ôrini qaytar
app.get('/birthdays', (req, res) => {
    res.status(200).json(birthdays);
});

// H…ôr g√ºn s…ôh…ôr saat 9-da yoxlamaq √º√ß√ºn cron job (test √º√ß√ºn '* * * * *')
cron.schedule('0 9 * * *', () => {
  console.log('Ad g√ºn√º yoxlamasƒ± ba≈üladƒ±...');
  const today = new Date();
  const day = today.getDate();
  const month = today.getMonth() + 1;

  const todayBirthdays = birthdays.filter(b => b.day === day && b.month === month);

  if (todayBirthdays.length > 0) {
    todayBirthdays.forEach(b => {
        const payload = JSON.stringify({
            title: "üéâ Ad G√ºn√º Xatƒ±rlatmasƒ±! üéâ",
            body: `Bu g√ºn ${b.name}ƒ±n ad g√ºn√ºd√ºr! T…ôbrik etm…ôyi unutma! ü•≥`
        });

        console.log(`Bildiri≈ü g√∂nd…ôrilir: ${b.name}`);
        subscriptions.forEach(sub => {
            webpush.sendNotification(sub, payload).catch(err => {
                console.error('Bildiri≈ü g√∂nd…ôril…ô bilm…ôdi', err);
            });
        });
    });
  } else {
      console.log('Bu g√ºn √º√ß√ºn ad g√ºn√º tapƒ±lmadƒ±.');
  }
});

const PORT = 3000;
app.listen(PORT, () => console.log(`Server ${PORT} portunda i≈ü…ô d√º≈üd√º`));
